registerChannelProviderLocal firstTime true
#
# Start at "2020-W50-Dec07-1530-28-CET"
#
# Version information:
# European Spallation Source ERIC : iocsh.bash (3.3.0-PID-31618)
#
# --->--> snip -->--> 
# Please Use Version and other environment variables
# in order to report or debug this shell
#
# HOSTDISPLAY=""
# WINDOWID=""
# PWD="/home/dev/projects/ecmc_bifrost_slits_sat/iocsh"
# USER="dev"
# LOGNAME="dev"
# EPICS_HOST_ARCH="linux-x86_64"
# EPICS_BASE="/home/dev/epics/base-7.0.4"
# E3_REQUIRE_NAME="require"
# E3_REQUIRE_VERSION="3.3.0"
# E3_REQUIRE_LOCATION="/home/dev/epics/base-7.0.4/require/3.3.0"
# E3_REQUIRE_BIN="/home/dev/epics/base-7.0.4/require/3.3.0/bin"
# E3_REQUIRE_DB="/home/dev/epics/base-7.0.4/require/3.3.0/db"
# E3_REQUIRE_DBD="/home/dev/epics/base-7.0.4/require/3.3.0/dbd"
# E3_REQUIRE_INC="/home/dev/epics/base-7.0.4/require/3.3.0/include"
# E3_REQUIRE_LIB="/home/dev/epics/base-7.0.4/require/3.3.0/lib"
# EPICS_DRIVER_PATH="/home/dev/epics/base-7.0.4/require/3.3.0/siteMods:/home/dev/epics/base-7.0.4/require/3.3.0/siteApps"
# EPICS_CA_AUTO_ADDR_LIST=""
# EPICS_CA_ADDR_LIST=""
# PATH="/home/dev/epics/base-7.0.4/require/3.3.0/bin:/home/dev/epics/base-7.0.4/bin/linux-x86_64:/home/dev/programs/root/bin:/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/bin:/sbin:/home/dev/.local/bin:/home/dev/bin"
# --->--> snip -->--> 
#
# Set REQUIRE_IOC for its internal PVs
epicsEnvSet REQUIRE_IOC "REQMOD:mcag-epics4-31618"
#
# Enable an exit subroutine for sotfioc
dbLoadRecords "/home/dev/epics/base-7.0.4/db/softIocExit.db" "IOC=REQMOD:mcag-epics4-31618"
#
# Set E3_IOCSH_TOP for the absolute path where iocsh.bash is executed.
epicsEnvSet E3_IOCSH_TOP "/home/dev/projects/ecmc_bifrost_slits_sat/iocsh"
#
# 
# Load require module, which has the version 3.3.0
# 
dlload /home/dev/epics/base-7.0.4/require/3.3.0/lib/linux-x86_64/librequire.so
dbLoadDatabase /home/dev/epics/base-7.0.4/require/3.3.0/dbd/require.dbd
require_registerRecordDeviceDriver
Loading module info records for require
# 
# Set E3_CMD_TOP for the absolute path where bifrost.script exists
epicsEnvSet E3_CMD_TOP "/home/dev/projects/ecmc_bifrost_slits_sat/iocsh"
#
iocshLoad 'bifrost.script',''
##############################################################################
## Example config for fat_sat crate for AVS (Bifrost)
## Bifrost slit set config
##############################################################################
## Initiation:
epicsEnvSet("IOC" ,"IOC_TEST")
epicsEnvSet("ECMCCFG_INIT" ,"")  #Only run startup once (auto at PSI, need call at ESS), variable set to "#" in startup.cmd
epicsEnvSet("SCRIPTEXEC" ,"iocshLoad")
require ecmccfg develop
Module ecmccfg version develop found in /home/dev/epics/base-7.0.4/require/3.3.0/siteMods/ecmccfg/develop/
Module ecmccfg has no library
Loading module info records for ecmccfg
# Epics Motor record driver that will be used:
epicsEnvShow(ECMC_MR_MODULE)
ECMC_MR_MODULE is not an environment variable.
# run module startup.cmd (only needed at ESS  PSI auto call at require)
iocshLoad /home/dev/epics/base-7.0.4/require/3.3.0/siteMods/ecmccfg/develop/startup.cmd, "IOC=IOC_TEST,ECMC_VER=6.3.0, EC_RATE=1000"
#==============================================================================
# startup.cmd
on error halt
require ecmc        "6.3.0"
Module ecmc version 6.3.0 found in /home/dev/epics/base-7.0.4/require/3.3.0/siteMods/ecmc/6.3.0/
Module ecmc depends on asyn 4.37.0
Module asyn version 4.37.0 found in /home/dev/epics/base-7.0.4/require/3.3.0/siteMods/asyn/4.37.0/
Loading library /home/dev/epics/base-7.0.4/require/3.3.0/siteMods/asyn/4.37.0/lib/linux-x86_64/libasyn.so
Loaded asyn version 4.37.0
Loading dbd file /home/dev/epics/base-7.0.4/require/3.3.0/siteMods/asyn/4.37.0/dbd/asyn.dbd
Calling function asyn_registerRecordDeviceDriver
Loading module info records for asyn
Module ecmc depends on exprtk 1.2.1
Module exprtk version 1.2.1 found in /home/dev/epics/base-7.0.4/require/3.3.0/siteMods/exprtk/1.2.1/
Loading library /home/dev/epics/base-7.0.4/require/3.3.0/siteMods/exprtk/1.2.1/lib/linux-x86_64/libexprtk.so
Loaded exprtk version 1.2.1
exprtk has no dbd file
Loading module info records for exprtk
Module ecmc depends on motor 7.0.4
Module motor version 7.0.4 found in /home/dev/epics/base-7.0.4/require/3.3.0/siteMods/motor/7.0.4/
Module motor depends on asyn 4.37.0
Module asyn version 4.37.0 already loaded
Loading library /home/dev/epics/base-7.0.4/require/3.3.0/siteMods/motor/7.0.4/lib/linux-x86_64/libmotor.so
Loaded motor version 7.0.4
Loading dbd file /home/dev/epics/base-7.0.4/require/3.3.0/siteMods/motor/7.0.4/dbd/motor.dbd
Calling function motor_registerRecordDeviceDriver
Loading module info records for motor
Loading library /home/dev/epics/base-7.0.4/require/3.3.0/siteMods/ecmc/6.3.0/lib/linux-x86_64/libecmc.so
Loaded ecmc version 6.3.0
Loading dbd file /home/dev/epics/base-7.0.4/require/3.3.0/siteMods/ecmc/6.3.0/dbd/ecmc.dbd
Calling function ecmc_registerRecordDeviceDriver
Loading module info records for ecmc
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD, "'ecmcMotorRecord'='EthercatMC'", "require  EthercatMC 3.0.2 # Using EthercatMC motor record support.","# Using ecmcMotorRecord motor record support.")
# Using ecmcMotorRecord motor record support.
epicsEnvUnset(ECMC_EXE_CMD)
epicsEnvSet("ECMC_CONFIG_ROOT",     "/home/dev/epics/base-7.0.4/require/3.3.0/siteMods/ecmccfg/develop/")
epicsEnvSet("ECMC_CONFIG_DB",       "/home/dev/epics/base-7.0.4/require/3.3.0/siteMods/ecmccfg/develop/db/")
epicsEnvSet("SCRIPTEXEC",           "iocshLoad")
epicsEnvSet("SM_PREFIX",            "IOC_TEST:")    # colon added since IOC is _not_ PREFIX
epicsEnvSet("ECMC_PROC_HOOK",       "")
ecmcFileExist("/home/dev/epics/base-7.0.4/require/3.3.0/siteMods/ecmccfg/develop/initAll.cmd",1)
iocshLoad "/home/dev/epics/base-7.0.4/require/3.3.0/siteMods/ecmccfg/develop/initAll.cmd"
#==============================================================================
# initAll.cmd
ecmcFileExist("/home/dev/epics/base-7.0.4/require/3.3.0/siteMods/ecmccfg/develop/init.cmd",1)
iocshLoad /home/dev/epics/base-7.0.4/require/3.3.0/siteMods/ecmccfg/develop/init.cmd
#==============================================================================
# init.cmd
epicsEnvSet("ECMC_ASYN_TIMEOUT",      1)                   # Asyn timeout
epicsEnvSet("ECMC_ASYN_ADDR",         0)                   # Asyn Address
epicsEnvSet("ECMC_MOTOR_PORT",        "NOT SET")
epicsEnvSet("ECMC_ASYN_PORT",         "NOT SET")
epicsEnvSet("ECMC_PREFIX",            "NOT SET")
epicsEnvSet("ECMC_GEN_EC_RECORDS",    "NOT SET")
epicsEnvSet("ECMC_GEN_AX_RECORDS",    "NOT SET")
epicsEnvSet("ECMC_EC_AXIS_HEALTH",    "NOT SET")
epicsEnvSet("ECMC_PLC_SAMPLE_RATE_MS", "NOT SET")
epicsEnvSet("ECMC_TSE",               -2)
ecmcFileExist("/home/dev/epics/base-7.0.4/require/3.3.0/siteMods/ecmccfg/develop/initAxis.cmd",1)
iocshLoad "/home/dev/epics/base-7.0.4/require/3.3.0/siteMods/ecmccfg/develop/initAxis.cmd"
#==============================================================================
# initAxis.cmd
epicsEnvSet("ECMC_MOTOR_NAME",            "NOT SET")
epicsEnvSet("ECMC_R",                     "NOT SET")
epicsEnvSet("ECMC_AXIS_NO",               "NOT SET")
epicsEnvSet("ECMC_DESC",                  "NOT SET")
epicsEnvSet("ECMC_EGU",                   "NOT SET")       # Motor Record Unit
epicsEnvSet("ECMC_PREC",                  "NOT SET")       # Motor Record Precision
epicsEnvSet("ECMC_AXISCONFIG",            "NOT SET")       # Extra parameters to driver
epicsEnvSet("ECMC_EC_AXIS_HEALTH",        "NOT SET")       # Entry for axis health output (example: ec0.s1.BO_1.0)
epicsEnvSet("ECMC_ENC_SCALE_NUM",         "NOT SET")
epicsEnvSet("ECMC_ENC_SCALE_DENOM",       "NOT SET")
epicsEnvSet("ECMC_ENC_BITS",              "NOT SET")
epicsEnvSet("ECMC_ENC_TYPE",              "NOT SET")       # Type: 0=Incremental, 1=Absolute
epicsEnvSet("ECMC_EC_ENC_ACTPOS",         "NOT SET")       # Ethercat entry for actual position input (encoder)
epicsEnvSet("ECMC_ENC_ABS_BITS",          "NOT SET")       # Absolute bit count (for absolute encoders) always least significant part
epicsEnvSet("ECMC_ENC_ABS_OFFSET",        "NOT SET")       # Encoder offset in eng units (for absolute encoders)
epicsEnvSet("ECMC_EC_ENC_LATCHPOS",       "")              # Ethercat entry for latch position (only valid for home seq 11,12)
epicsEnvSet("ECMC_EC_ENC_LATCH_CONTROL",  "")              # Ethercat entry for latch control (only valid for home seq 11,12)
epicsEnvSet("ECMC_EC_ENC_LATCH_STATUS",   "")              # Ethercat entry for latch status (only valid for home seq 11,12)
epicsEnvSet("ECMC_DRV_SCALE_NUM",         "NOT SET")
epicsEnvSet("ECMC_DRV_SCALE_DENOM",       "NOT SET")
epicsEnvSet("ECMC_EC_DRV_CONTROL",        "NOT SET")       # Ethercat entry for control word or bit output
epicsEnvSet("ECMC_EC_DRV_STATUS",         "NOT SET")       # Ethercat entry for status word or bit input
epicsEnvSet("ECMC_EC_DRV_VELOCITY",       "NOT SET")       # Ethercat entry for velocity setpoint output
epicsEnvSet("ECMC_EC_DRV_BRAKE",          "NOT SET")       # Ethercat entry for brake output
epicsEnvSet("ECMC_EC_DRV_REDUCE_TORQUE",  "NOT SET")       # Ethercat entry for reduce torque output
epicsEnvSet("ECMC_DRV_BRAKE_OPEN_DLY_TIME",    "NOT SET")  # Brake timing parameter in cycles (default 1kHz)
epicsEnvSet("ECMC_DRV_BRAKE_CLOSE_AHEAD_TIME", "NOT SET")  # Brake timing parameter in cycles (default 1kHz)
epicsEnvSet("ECMC_VELO",                  "NOT SET")
epicsEnvSet("ECMC_JOG_VEL",               "NOT SET")
epicsEnvSet("ECMC_JAR",                   "NOT SET")       # JAR defaults to VELO/ACCL
epicsEnvSet("ECMC_ACCL",                  "NOT SET")
epicsEnvSet("ECMC_EMERG_DECEL",           "NOT SET")       # Emergency deceleration
epicsEnvSet("ECMC_HOME_PROC",              "NOT SET")
epicsEnvSet("ECMC_HOME_POS",               "NOT SET")
epicsEnvSet("ECMC_HOME_VEL_TO",            "NOT SET")
epicsEnvSet("ECMC_HOME_VEL_FRM",           "NOT SET")
epicsEnvSet("ECMC_HOME_ACC",               "NOT SET")
epicsEnvSet("ECMC_HOME_DEC",               "NOT SET")
epicsEnvSet("ECMC_HOME_LATCH_COUNT_OFFSET","0")
epicsEnvSet("ECMC_CNTRL_KP",              "NOT SET")
epicsEnvSet("ECMC_CNTRL_KI",              "NOT SET")
epicsEnvSet("ECMC_CNTRL_KD",              "NOT SET")
epicsEnvSet("ECMC_CNTRL_KFF",             "NOT SET")
epicsEnvSet("ECMC_EC_MON_LOWLIM",         "NOT SET")       #  Ethercat entry for low limit switch input
epicsEnvSet("ECMC_EC_MON_HIGHLIM",        "NOT SET")       #  Ethercat entry for high limit switch inpuit
epicsEnvSet("ECMC_EC_MON_HOME_SWITCH",    "NOT SET")       #  Ethercat entry for home switch input
epicsEnvSet("ECMC_EC_MON_EXT_INTERLOCK",  "NOT SET")       #  Ethercat entry for external interlock input
epicsEnvSet("ECMC_SOFT_LOW_LIM",          "NOT SET")
epicsEnvSet("ECMC_SOFT_HIGH_LIM",         "NOT SET")
epicsEnvSet("ECMC_DXLM_ENABLE",           "NOT SET")
epicsEnvSet("ECMC_MON_LAG_MON_TOL",       "NOT SET")
epicsEnvSet("ECMC_MON_LAG_MON_TIME",      "NOT SET")
epicsEnvSet("ECMC_MON_LAG_MON_ENA",       "NOT SET")
epicsEnvSet("ECMC_MON_AT_TARGET_TOL",     "NOT SET")
epicsEnvSet("ECMC_MON_AT_TARGET_TIME",    "NOT SET")
epicsEnvSet("ECMC_MON_AT_TARGET_ENA",     "NOT SET")
epicsEnvSet("ECMC_MON_VELO_MAX",          "NOT SET")
epicsEnvSet("ECMC_MON_VELO_MAX_TRAJ_TIME","NOT SET")
epicsEnvSet("ECMC_MON_VELO_MAX_DRV_TIME", "NOT SET")
epicsEnvSet("ECMC_MON_VELO_MAX_ENA",      "NOT SET")
epicsEnvSet("ECMC_EGU",               "mm")
epicsEnvSet("ECMC_PREC",              3)
epicsEnvSet("ECMC_AXISFIELDINIT",     "")                  # Extra field init to motor record
epicsEnvSet("ECMC_AXISCONFIG",        "")                  # Extra parameters to driver
############################################################
############# ASYN Configuration:
epicsEnvSet("ECMC_MOTOR_PORT"     "MCU1")
epicsEnvSet("ECMC_ASYN_PORT"      "MC_CPU1")
epicsEnvSet("ECMC_PREFIX"         "IOC_TEST:")
ecmcAsynPortDriverConfigure(MC_CPU1,1000,0,0,100)
ecmcAsynPortDriverConfigure: portName = MC_CPU1, paramTableSize = 1000, disableAutoConnect = 0, priority = 0, defaultSampleRateMS = 100.000000
asynOctetSetOutputEos(MC_CPU1, -1, ";\n")
asynOctetSetInputEos(MC_CPU1, -1, ";\n")
asynSetTraceMask(MC_CPU1, -1, 0x41)
asynSetTraceIOMask(MC_CPU1, -1, 6)
asynSetTraceInfoMask(MC_C2020/12/07 15:30:28.761 
ECMC Initializes.............
2020/12/07 15:30:28.762 ESS Open Source EtherCAT Motion Control Epics Module2020/12/07 15:30:28.762 
Mode: Configuration
2020/12/07 15:30:28.762 OK
2020/12/07 15:30:28.762 OK
2020/12/07 15:30:28.762 OK
2020/12/07 15:30:28.763 OK
2020/12/07 15:30:28.763 OK
2020/12/07 15:30:28.763 OK
2020/12/07 15:30:28.763 OK
0  0:0  PREOP  +  EK1100 EtherCAT-Koppler (2A E-Bus)
1  0:1  PREOP  +  EL7037 1K. Schrittmotor-Endstufe (24V, 1.5A)
2  0:2  PREOP  +  EL1808 8K. Dig. Eingang 24V, 3ms
3  0:3  PREOP  +  EL2808 8K. Dig. Ausgang 24V, 0.5A
4  0:4  PREOP  +  EL7211 1K. MDP742 Servo-Motor-Endstufe (50V, 4,5A RMS)
2020/12/07 15:30:28.771 OK
2020/12/07 15:30:28.855 OK
2020/12/07 15:30:28.855 OK
2020/12/07 15:30:28.856 OK
2020/12/07 15:30:28.856 OK
PU1, -1, 1)
ecmcMotorRecordCreateController(MCU1, MC_CPU1, "64", 200, 1000, "")
############################################################
############# Misc settings:
# Disable function call trace printouts
ecmcConfigOrDie "Cfg.SetEnableFuncCallDiag(0)"
# Disable on change printouts from objects (enable for easy logging)
ecmcConfigOrDie "Cfg.SetTraceMaskBit(15,0)"
# Choose to generate EPICS-records for EtherCAT-entries
# (For records use ECMC_GEN_EC_RECORDS="-records" otherwise ECMC_GEN_EC_RECORDS="")
epicsEnvSet("ECMC_GEN_EC_RECORDS",          "-records")
# Choose to generate EPICS-records for ax-entries (PosAct, SetPos,..)
# (For records use ECMC_GEN_AX_RECORDS="-records" otherwise ECMC_GEN_AX_RECORDS="")
epicsEnvSet("ECMC_GEN_AX_RECORDS",          "-records")
# Update records in 10ms (100Hz)
epicsEnvSet("ECMC_SAMPLE_RATE_MS",       "10")
# Set EtherCAT frequency (defaults to 1000)
ecmcConfigOrDie "Cfg.SetSampleRate(1000)"
epicsEnvSet("ECMC_EC_SAMPLE_RATE" ,1000)
ecmcEpicsEnvSetCalcTernary(ECMC_MASTER_CMD, "0>=0", "","#- ")
 ecmcFileExist("/home/dev/epics/base-7.0.4/require/3.3.0/siteMods/ecmccfg/develop/addMaster.cmd",1)
 iocshLoad "/home/dev/epics/base-7.0.4/require/3.3.0/siteMods/ecmccfg/develop/addMaster.cmd", "MASTER_ID=0"
#===============================================================================
# addMaster.cfg
epicsEnvSet("ECMC_EC_MASTER_ID"          "0")
# Claim master
ecmcConfigOrDie "Cfg.EcSetMaster(0)"
epicsEnvSet("ECMC_MASTER_ID" ,0)
ecmcFileExist("/home/dev/epics/base-7.0.4/require/3.3.0/siteMods/ecmccfg/develop/setDiagnostics.cmd",1)
iocshLoad /home/dev/epics/base-7.0.4/require/3.3.0/siteMods/ecmccfg/develop/setDiagnostics.cmd
#==============================================================================
# setDiagnostics.cmd
ecmcConfigOrDie "Cfg.EcSetDiagnostics(1)"
ecmcConfigOrDie "Cfg.EcEnablePrintouts(0)"
ecmcConfigOrDie "Cfg.EcSetDomainFailedCyclesLimit(100)"
epicsEnvSet("ECMCCFG_INIT" ,"#")
##############################################################################
## Configure hardware:
#0  0:0  PREOP  +  EK1100 EtherCAT-Koppler (2A E-Bus)
#1  0:1  PREOP  +  EL7037 1K. Schrittmotor-Endstufe (24V, 1.5A)
#2  0:2  PREOP  +  EL1808 8K. Dig. Eingang 24V, 3ms
#3  0:3  PREOP  +  EL2808 8K. Dig. Ausgang 24V, 0.5A
#4  0:4  PREOP  +  EL7211 1K. MDP742 Servo-Motor-Endstufe (50V, 4,5A RMS)
system("ethercat slaves")
epicsEnvSet("ECMC_EC_SLAVE_NUM",              "1")
epicsEnvSet("ECMC_EC_SLAVE_NUM_DRIVE",         1)
iocshLoad /home/dev/epics/base-7.0.4/require/3.3.0/siteMods/ecmccfg/develop/configureSlave.cmd, "SLAVE_ID=1, HW_DESC=EL7037, CONFIG=-Motor-AML-D42.3-1.8"
#==============================================================================
# configureSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "1")
epicsEnvSet("HW_DESC",            "EL7037")
ecmcFileExist("/home/dev/epics/base-7.0.4/require/3.3.0/siteMods/ecmccfg/develop/addSlave.cmd",1)
iocshLoad /home/dev/epics/base-7.0.4/require/3.3.0/siteMods/ecmccfg/develop/addSlave.cmd "SLAVE_ID=1, HW_DESC=EL7037"
#==============================================================================
# addSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "1")
epicsEnvSet("HW_DESC",            "EL7037")
# add ${HW_DESC} to the bus at position ${SLAVE_ID}
ecmcFileExist("/home/dev/epics/base-7.0.4/require/3.3.0/siteMods/ecmccfg/develop/ecmcEL7037.cmd",1)
iocshLoad /home/dev/epics/base-7.0.4/require/3.3.0/siteMods/ecmccfg/develop/ecmcEL7037.cmd "NELM=1"
epicsEnvSet("ECMC_EC_HWTYPE"             "EL7037")
epicsEnvSet("ECMC_EC_VENDOR_ID"          "0x2")
epicsEnvSet("ECMC_EC_PRODUCT_ID"         "0x1b7d3052")
ecmcConfigOrDie "Cfg.EcSlaveVerify(0,1,0x2,0x1b7d3052)"
ecmcConfigOrDie "Cfg.EcWriteSdo(1,0x1011,0x1,1684107116,4)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(1,0x2,0x1b7d3052,1,2,0x1600,0x7000,0x01,16,ENC_CONTROL)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(1,0x2,0x1b7d3052,1,2,0x1600,0x7000,0x11,16,VALUE)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(1,0x2,0x1b7d3052,1,2,0x1602,0x7010,0x1,16,STM_CONTROL)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(1,0x2,0x1b7d3052,1,2,0x1604,0x7010,0x2020/12/07 15:30:28.856 OK
2020/12/07 15:30:28.856 OK
2020/12/07 15:30:28.856 OK
2020/12/07 15:30:28.856 OK
2020/12/07 15:30:28.856 OK
2020/12/07 15:30:28.856 OK
2020/12/07 15:30:28.856 OK
2020/12/07 15:30:28.856 OK
2020/12/07 15:30:28.856 OK
2020/12/07 15:30:28.860 OK
2020/12/07 15:30:28.860 OK
2020/12/07 15:30:28.860 OK
2020/12/07 15:30:28.860 OK
2020/12/07 15:30:28.861 OK
2020/12/07 15:30:28.861 OK
2020/12/07 15:30:28.861 OK
2020/12/07 15:30:28.861 OK
2020/12/07 15:30:28.861 OK
2020/12/07 15:30:28.861 OK
21,16,1,VELOCITY_SETPOINT)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(1,0x2,0x1b7d3052,2,3,0x1a00,0x6000,0x0,16,ENC_STATUS)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(1,0x2,0x1b7d3052,2,3,0x1a00,0x6000,0x11,16,POSITION)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(1,0x2,0x1b7d3052,2,3,0x1a00,0x6000,0x12,16,LATCH_POSITION)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(1,0x2,0x1b7d3052,2,3,0x1a03,0x6010,0x1,16,STM_STATUS)"
ecmcConfigOrDie "Cfg.EcAddSdo(1,0x8012,0x5,1,1)"
ecmcConfigOrDie "Cfg.EcAddSdo(1,0x8012,0xA,1,1)"
ecmcConfigOrDie "Cfg.EcAddSdo(1,0x8012,0x8,1,1)"
ecmcConfigOrDie "Cfg.EcAddSdo(1,0x8012,0x9,0,1)"
ecmcFileExist(ecmcEL7037.substitutions,1,1)
dbLoadTemplate(ecmcEL7037.substitutions,"P=IOC_TEST:,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=0,SLAVE_POS=1,HWTYPE=EL7037,T_SMP_MS=10,TSE=-2,NELM=1")
# increment SLAVE_ID
ecmcEpicsEnvSetCalc("SLAVE_ID", "1+1","%d")
# apply config ${CONFIG} for ${HW_DESC}
ecmcFileExist("/home/dev/epics/base-7.0.4/require/3.3.0/siteMods/ecmccfg/develop/ecmcEL7037-Motor-AML-D42.3-1.8.cmd",1)
iocshLoad /home/dev/epics/base-7.0.4/require/3.3.0/siteMods/ecmccfg/develop/ecmcEL7037-Motor-AML-D42.3-1.8.cmd ""
epicsEnvSet(I_MAX_MA_LOCAL,"1000")
epicsEnvSet(I_RUN_MA_LOCAL,610)
epicsEnvSet(I_STDBY_MA_LOCAL,87)
ecmcFileExist("/home/dev/epics/base-7.0.4/require/3.3.0/siteMods/ecmccfg/develop/chkValidCurrentSetOrDie.cmd",1)
iocshLoad /home/dev/epics/base-7.0.4/require/3.3.0/siteMods/ecmccfg/develop/chkValidCurrentSetOrDie.cmd "I_RUN_MA=610,I_STDBY_MA=87,I_MAX_MA=1000"
#==============================================================================
# chkValidCurrentSetOrDie.cmd
# Ensure running current is below max current otherwise exit
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD, "610>1000 or 610<=0", "ecmcExit Error: Run current setpoint to high or negative...","# Run current setting OK (610)...")
# Result: 
# Run current setting OK (610)...
epicsEnvUnset(ECMC_EXE_CMD)
# Ensure standby current is below max current otherwise exit
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD, "87>1000 or 87<0", "ecmcExit Error: Standby current setpoint to high or negative...","# Standby current setting OK (87)...")
# Result: 
# Standby current setting OK (87)...
epicsEnvUnset(ECMC_EXE_CMD)
# Ensure standby current is below run current otherwise exit
ecmcEpicsEnvSetCalcTernary(ECMC_EXE_CMD, "87>610", "ecmcExit Error: Standby current higher than run current...","# Standby current and run current setting OK (87<610)...")
# Result: 
# Standby current and run current setting OK (87<610)...
epicsEnvUnset(ECMC_EXE_CMD)
ecmcConfigOrDie "Cfg.EcAddSdo(1,0x8010,0x1,610,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(1,0x8010,0x2,87,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(1,0x8010,0x3,2400,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(1,0x8010,0x4,850,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(1,0x8010,0x6,200,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(1,0x8010,0xA,1950,2)"
epicsEnvUnset("I_RUN_MA_LOCAL")
epicsEnvUnset("I_STDBY_MA_LOCAL")
epicsEnvUnset("I_MAX_MA_LOCAL")
epicsEnvSet("ECMC_EC_SLAVE_NUM",              "2")
epicsEnvSet("ECMC_EC_SLAVE_NUM_INPUTS",       2)
iocshLoad /home/dev/epics/base-7.0.4/require/3.3.0/siteMods/ecmccfg/develop/addSlave.cmd, "SLAVE_ID=2, HW_DESC=EL1808"
#==============================================================================
# addSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "2")
epicsEnvSet("HW_DESC",            "EL1808")
# add ${HW_DESC} to the bus at position ${SLAVE_ID}
ecmcFileExist("/home/dev/epics/base-7.0.4/require/3.3.0/siteMods/ecmccfg/develop/ecmcEL1808.cmd",1)
iocshLoad /home/dev/epics/base-7.0.4/require/3.3.0/siteMods/ecmccfg/develop/ecmcEL1808.cmd "NELM=1"
epicsEnvSet("ECMC_EC_HWTYPE"             "EL1808")
epicsEnvSet("ECMC_EC_VENDOR_ID"          "0x2")
epicsEnvSet("ECMC_EC_PRODUCT_ID"         "0x07103052")
ecmcConfigOrDie "Cfg.EcSlaveVerify(0,2,0x2,0x07103052)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(2,0x2,0x07103052,2,0,0x1a00,0x6000,0x1,1,BI_1)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(2,0x2,0x07103052,2,0,0x1a01,0x6010,0x1,1,BI_2)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(2,0x2,0x07103052,2,0,0x1a02,0x6020,0x1,1,BI_3)"
ecmcConfigOrDie "Cfg.EcAddEntr2020/12/07 15:30:28.862 OK
2020/12/07 15:30:28.862 OK
2020/12/07 15:30:28.862 OK
2020/12/07 15:30:28.862 OK
2020/12/07 15:30:28.862 OK
2020/12/07 15:30:28.864 OK
2020/12/07 15:30:28.865 OK
2020/12/07 15:30:28.865 OK
2020/12/07 15:30:28.865 OK
2020/12/07 15:30:28.865 OK
2020/12/07 15:30:28.865 OK
2020/12/07 15:30:28.865 OK
2020/12/07 15:30:28.865 OK
2020/12/07 15:30:28.865 OK
bifrost.script line 43: Unbalanced quote.
2020/12/07 15:30:28.868 OK
2020/12/07 15:30:28.935 OK
2020/12/07 15:30:28.936 OK
2020/12/07 15:30:28.936 OK
2020/12/07 15:30:28.936 OK
2020/12/07 15:30:28.936 OK
2020/12/07 15:30:28.937 OK
2020/12/07 15:30:28.937 OK
yComplete(2,0x2,0x07103052,2,0,0x1a03,0x6030,0x1,1,BI_4)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(2,0x2,0x07103052,2,0,0x1a04,0x6040,0x1,1,BI_5)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(2,0x2,0x07103052,2,0,0x1a05,0x6050,0x1,1,BI_6)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(2,0x2,0x07103052,2,0,0x1a06,0x6060,0x1,1,BI_7)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(2,0x2,0x07103052,2,0,0x1a07,0x6070,0x1,1,BI_8)"
ecmcFileExist(ecmcEL1808.substitutions,1,1)
dbLoadTemplate(ecmcEL1808.substitutions,"P=IOC_TEST:,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=0,SLAVE_POS=2,HWTYPE=EL1808,T_SMP_MS=10,TSE=-2,NELM=1")
# increment SLAVE_ID
ecmcEpicsEnvSetCalc("SLAVE_ID", "2+1","%d")
epicsEnvSet("ECMC_EC_SLAVE_NUM",              "3")
epicsEnvSet("ECMC_EC_SLAVE_NUM_OUTPUTS",      3)
iocshLoad /home/dev/epics/base-7.0.4/require/3.3.0/siteMods/ecmccfg/develop/addSlave.cmd, "SLAVE_ID=3, HW_DESC=EL2808"
#==============================================================================
# addSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "3")
epicsEnvSet("HW_DESC",            "EL2808")
# add ${HW_DESC} to the bus at position ${SLAVE_ID}
ecmcFileExist("/home/dev/epics/base-7.0.4/require/3.3.0/siteMods/ecmccfg/develop/ecmcEL2808.cmd",1)
iocshLoad /home/dev/epics/base-7.0.4/require/3.3.0/siteMods/ecmccfg/develop/ecmcEL2808.cmd "NELM=1"
epicsEnvSet("ECMC_EC_HWTYPE"             "EL2808")
epicsEnvSet("ECMC_EC_VENDOR_ID"          "0x2")
epicsEnvSet("ECMC_EC_PRODUCT_ID"         "0x0af83052")
ecmcConfigOrDie "Cfg.EcSlaveVerify(0,3,0x2,0x0af83052)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(3,0x2,0x0af83052,1,0,0x1600,0x7000,0x1,1,BO_1)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(3,0x2,0x0af83052,1,0,0x1601,0x7010,0x1,1,BO_2)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(3,0x2,0x0af83052,1,0,0x1602,0x7020,0x1,1,BO_3)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(3,0x2,0x0af83052,1,0,0x1603,0x7030,0x1,1,BO_4)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(3,0x2,0x0af83052,1,0,0x1604,0x7040,0x1,1,BO_5)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(3,0x2,0x0af83052,1,0,0x1605,0x7050,0x1,1,BO_6)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(3,0x2,0x0af83052,1,0,0x1606,0x7060,0x1,1,BO_7)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(3,0x2,0x0af83052,1,0,0x1607,0x7070,0x1,1,BO_8)"
ecmcFileExist(ecmcEL2808.substitutions,1,1)
dbLoadTemplate(ecmcEL2808.substitutions,"P=IOC_TEST:,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=0,SLAVE_POS=3,HWTYPE=EL2808,T_SMP_MS=10,TSE=-2,NELM=1")
# increment SLAVE_ID
ecmcEpicsEnvSetCalc("SLAVE_ID", "3+1","%d")
epicsEnvSet("ECMC_EC_SLAVE_NUM",              "4")
epicsEnvSet("ECMC_EC_SLAVE_NUM_RESOLVER       "4")
iocshLoad /home/dev/epics/base-7.0.4/require/3.3.0/siteMods/ecmccfg/develop/addSlave.cmd, "SLAVE_ID=4, HW_DESC=EL7211"
#==============================================================================
# addSlave.cmd
epicsEnvSet("ECMC_EC_SLAVE_NUM",  "4")
epicsEnvSet("HW_DESC",            "EL7211")
# add ${HW_DESC} to the bus at position ${SLAVE_ID}
ecmcFileExist("/home/dev/epics/base-7.0.4/require/3.3.0/siteMods/ecmccfg/develop/ecmcEL7211.cmd",1)
iocshLoad /home/dev/epics/base-7.0.4/require/3.3.0/siteMods/ecmccfg/develop/ecmcEL7211.cmd "NELM=1"
epicsEnvSet("ECMC_EC_HWTYPE"             "EL7211")
epicsEnvSet("ECMC_EC_VENDOR_ID"          "0x2")
epicsEnvSet("ECMC_EC_PRODUCT_ID"         "0x1c2b3052")
ecmcConfigOrDie "Cfg.EcSlaveVerify(0,4,0x2,0x1c2b3052)"
ecmcConfigOrDie "Cfg.EcWriteSdo(4,0x1011,0x1,1684107116,4)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(4,0x2,0x1c2b3052,1,2,0x1600,0x7010,0x01,16,CONTROL)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(4,0x2,0x1c2b3052,1,2,0x1601,0x7010,0x06,32,1,VELOCITY_SETPOINT)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(4,0x2,0x1c2b3052,2,3,0x1a00,0x6000,0x11,32,POSITION)"
ecmcConfigOrDie "Cfg.EcAddEntryComplete(4,0x2,0x1c2b3052,2,3,0x1a01,0x6010,0x01,16,STATUS)"
ecmcEpicsEnvSetCalc("ECMC_TEMP_PERIOD_NANO_SECS",1000/1000*1E6)
ecmcEpicsEnvSetCalc("ECMC_TEMP_PERIOD_NANO_SECS_HALF",1000000/2)
ecmcConfigOrDie "Cfg.EcSlaveConfigDC(4,0x700,1000000,500000,0,0)"
# Peak current (to be overwritten by motor config)
ecmcConfigOrDie "Cfg.EcAddSdo(4,0x8011,0x11,1000,4)"
ecm2020/12/07 15:30:28.938 OK
2020/12/07 15:30:28.938 OK
2020/12/07 15:30:28.938 OK
2020/12/07 15:30:28.938 OK
2020/12/07 15:30:28.938 OK
2020/12/07 15:30:28.940 OK
2020/12/07 15:30:28.940 OK
2020/12/07 15:30:28.940 OK
2020/12/07 15:30:28.940 OK
2020/12/07 15:30:28.940 OK
2020/12/07 15:30:28.940 OK
2020/12/07 15:30:28.940 OK
2020/12/07 15:30:28.940 OK
2020/12/07 15:30:28.940 OK
2020/12/07 15:30:28.942 INFO: Locking memory
2020/12/07 15:30:28.963 Starting up EtherCAT bus: 0 second(s). Max wait time 30 second(s).
2020/12/07 15:30:29.043 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:374: ERROR: Slave 1: Not operational (0x24011).
2020/12/07 15:30:29.043 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:379: ERROR_EC_SLAVE_NOT_OPERATIONAL (0x24011).
2020/12/07 15:30:29.043 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:374: ERROR: Slave 2: Not operational (0x24011).
2020/12/07 15:30:29.043 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:379: ERROR_EC_SLAVE_NOT_OPERATIONAL (0x24011).
2020/12/07 15:30:29.043 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:374: ERROR: Slave 3: Not operational (0x24011).
2020/12/07 15:30:29.043 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:379: ERROR_EC_SLAVE_NOT_OPERATIONAL (0x24011).
2020/12/07 15:30:29.043 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:374: ERROR: Slave 4: Not operational (0x24011).
2020/12/07 15:30:29.043 ../devEcmcSup/ethercat/ecmcEcSlave.cpp/checkConfigState:379: ERROR_EC_SLAVE_NOT_OPERATIONAL (0x24011).
2020/12/07 15:30:29.963 Starting up EtherCAT bus: 1 second(s). Max wait time 30 second(s).
2020/12/07 15:30:30.155 ../devEcmcSup/main/ecmcError.cpp/errorReset:103: NO_ERROR (0x0).
2020/12/07 15:30:31.963 EtherCAT bus started!
2020/12/07 15:30:31.963 OK
2020/12/07 15:30:31.963 ecmcAsynPortDriver:getEpicsState: EPICS state: initHookAtIocBuild (0). Allow callbacks: true.
Starting iocInit
2020/12/07 15:30:31.963 ecmcAsynPortDriver:getEpicsState: EPICS state: initHookAtBeginning (1). Allow callbacks: true.
2020/12/07 15:30:31.967 ecmcAsynPortDriver:getEpicsState: EPICS state: initHookAfterCallbackInit (2). Allow callbacks: true.
2020/12/07 15:30:31.968 ecmcAsynPortDriver:getEpicsState: EPICS state: initHookAfterCaLinkInit (3). Allow callbacks: true.
2020/12/07 15:30:31.968 ecmcAsynPortDriver:getEpicsState: EPICS state: initHookAfterInitDrvSup (4). Allow callbacks: true.
2020/12/07 15:30:31.969 ecmcAsynPortDriver:getEpicsState: EPICS state: initHookAfterInitRecSup (5). Allow callbacks: true.
2020/12/07 15:30:31.970 ecmcAsynPortDriver:getEpicsState: EPICS state: initHookAfterInitDevSup (6). Allow callbacks: true.
2020/12/07 15:30:31.970 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s3.BO_1 linked to record (asyn reason 1).
2020/12/07 15:30:31.970 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s3.BO_2 linked to record (asyn reason 2).
2020/12/07 15:30:31.971 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s3.BO_3 linked to record (asyn reason 3).
2020/12/07 15:30:31.971 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s3.BO_4 linked to record (asyn reason 4).
2020/12/07 15:30:31.971 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s3.BO_5 linked to record (asyn reason 5).
2020/12/07 15:30:31.971 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s3.BO_6 linked to record (asyn reason 6).
2020/12/07 15:30:31.971 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s3.BO_7 linked to record (asyn reason 7).
2020/12/07 15:30:31.972 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s3.BO_8 linked to record (asyn reason 8).
2020/12/07 15:30:31.972 ecmcAsynPortDriver:drvUserCreate: Parameter ecmc.error.reset linked to record (asyn reason 9).
2020/12/07 15:30:31.972 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s1.STM_CONTROL linked to record (asyn reason 10).
2020/12/07 15:30:31.972 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s1.VELOCITY_SETPOINT linked to record (asyn reason 11).
2020/12/07 15:30:31.972 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s1.ENC_CONTROL linked to record (asyn reason 12).
2020/12/07 15:30:31.973 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s1.VALUE linked to record (asyn reason 13).
2020/12/07 15:30:31.973 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s4.CONTROL linked to record (asyn reason 14).
2020/12/07 15:30:31.973 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s4.VELOCITY_SETPOINT linked to record (asyn reason 15).
2020/12/07 15:30:31.973 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s1.STM_STATUS linked to record (asyn reason 16).
2020/12/07 15:30:31.974 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s1.ENC_STATUS linked to record (asyn reason 17).
2020/12/07 15:30:31.974 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s4.STATUS linked to record (asyn reason 18).
2020/12/07 15:30:31.974 ecmcAsynPortDriver:drvUserCreate: Parameter ecmc.error.msg linked to record (asyn reason 19).
2020/12/07 15:30:31.974 ecmcAsynPortDriver:drvUserCreate: Parameter ecmc.updated linked to record (asyn reason 20).
2020/12/07 15:30:31.974 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s1.slavestatus linked to record (asyn reason 21).
2020/12/07 15:30:31.974 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s2.slavestatus linked to record (asyn reason 22).
2020/12/07 15:30:31.975 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s3.slavestatus linked to record (asyn reason 23).
2020/12/07 15:30:31.975 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s4.slavestatus linked to record (asyn reason 24).
2020/12/07 15:30:31.975 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.masterstatus linked to record (asyn reason 25).
2020/12/07 15:30:31.975 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.slavecounter linked to record (asyn reason 26).
2020/12/07 15:30:31.975 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.memmapcounter linked to record (asyn reason 27).
2020/12/07 15:30:31.976 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.domainfailcountertotal linked to record (asyn reason 28).
2020/12/07 15:30:31.976 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.entrycounter linked to record (asyn reason 29).
2020/12/07 15:30:31.976 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.domainstatus linked to record (asyn reason 30).
2020/12/07 15:30:31.977 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s2.BI_1 linked to record (asyn reason 31).
2020/12/07 15:30:31.978 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s2.BI_2 linked to record (asyn reason 32).
2020/12/07 15:30:31.979 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s2.BI_3 linked to record (asyn reason 33).
2020/12/07 15:30:31.980 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s2.BI_4 linked to record (asyn reason 34).
2020/12/07 15:30:31.981 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s2.BI_5 linked to record (asyn reason 35).
2020/12/07 15:30:31.981 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s2.BI_6 linked to record (asyn reason 36).
2020/12/07 15:30:31.982 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s2.BI_7 linked to record (asyn reason 37).
2020/12/07 15:30:31.983 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s2.BI_8 linked to record (asyn reason 38).
2020/12/07 15:30:31.984 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.ok linked to record (asyn reason 39).
2020/12/07 15:30:31.985 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s1.ONE linked to record (asyn reason 40).
2020/12/07 15:30:31.986 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s1.ZERO linked to record (asyn reason 41).
2020/12/07 15:30:31.986 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s2.ONE linked to record (asyn reason 42).
2020/12/07 15:30:31.987 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s2.ZERO linked to record (asyn reason 43).
2020/12/07 15:30:31.988 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s3.ONE linked to record (asyn reason 44).
2020/12/07 15:30:31.989 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s3.ZERO linked to record (asyn reason 45).
2020/12/07 15:30:31.989 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s4.ONE linked to record (asyn reason 46).
2020/12/07 15:30:31.990 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s4.ZERO linked to record (asyn reason 47).
2020/12/07 15:30:31.992 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s1.POSITION linked to record (asyn reason 48).
2020/12/07 15:30:31.992 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s1.LATCH_POSITION linked to record (asyn reason 49).
2020/12/07 15:30:31.995 ecmcAsynPortDriver:drvUserCreate: Parameter ec0.s4.POSITION linked to record (asyn reason 50).
2020/12/07 15:30:31.996 ecmcAsynPortDriver:drvUserCreate: Parameter ecmc.appmode linked to record (asyn reason 51).
2020/12/07 15:30:31.997 ecmcAsynPortDriver:drvUserCreate: Parameter ecmc.error.id linked to record (asyn reason 52).
2020/12/07 15:30:31.998 ecmcAsynPortDriver:drvUserCreate: Parameter ecmc.thread.latency.min linked to record (asyn reason 53).
2020/12/07 15:30:31.998 ecmcAsynPortDriver:drvUserCreate: Parameter ecmc.thread.latency.max linked to record (asyn reason 54).
2020/12/07 15:30:31.999 ecmcAsynPortDriver:drvUserCreate: Parameter ecmc.thread.period.min linked to record (asyn reason 55).
2020/12/07 15:30:32.000 ecmcAsynPortDriver:drvUserCreate: Parameter ecmc.thread.period.max linked to record (asyn reason 56).
2020/12/07 15:30:32.001 ecmcAsynPortDriver:drvUserCreate: Parameter ecmc.thread.execute.min linked to record (asyn reason 57).
2020/12/07 15:30:32.002 ecmcAsynPortDriver:drvUserCreate: Parameter ecmc.thread.execute.max linked to record (asyn reason 58).
2020/12/07 15:30:32.003 ecmcAsynPortDriver:drvUserCreate: Parameter ecmc.thread.send.min linked to record (asyn reason 59).
2020/12/07 15:30:32.005 ecmcAsynPortDriver:drvUserCreate: Parameter ecmc.thread.send.max linked to record (asyn reason 60).
2020/12/07 15:30:32.013 ecmcAsynPortDriver:getEpicsState: EPICS state: initHookAfterInitDatabase (7). Allow callbacks: true.
2020/12/07 15:30:32.013 ecmcAsynPortDriver:getEpicsState: EPICS state: initHookAfterFinishDevSup (8). Allow callbacks: true.
2020/12/07 15:30:32.527 ecmcAsynPortDriver:getEpicsState: EPICS state: initHookAfterScanInit (9). Allow callbacks: true.
2020/12/07 15:30:32.527 ecmcAsynPortDriver:getEpicsState: EPICS state: initHookAfterInitialProcess (10). Allow callbacks: true.
2020/12/07 15:30:32.530 ecmcAsynPortDriver:getEpicsState: EPICS state: Unknown state (11). Allow callbacks: true.
2020/12/07 15:30:32.531 ecmcAsynPortDriver:getEpicsState: EPICS state: initHookAfterIocBuilt (12). Allow callbacks: true.
2020/12/07 15:30:32.538 ecmcAsynPortDriver:getEpicsState: EPICS state: initHookAtIocRun (13). Allow callbacks: true.
2020/12/07 15:30:32.539 ecmcAsynPortDriver:getEpicsState: EPICS state: initHookAfterDatabaseRunning (14). Allow callbacks: true.
2020/12/07 15:30:32.539 ecmcAsynPortDriver:getEpicsState: EPICS state: initHookAfterInterruptAccept (28). Allow callbacks: true.
2020/12/07 15:30:32.539 ecmcAsynPortDriver:getEpicsState: EPICS state: initHookAfterCaServerRunning (15). Allow callbacks: true.
2020/12/07 15:30:32.539 ecmcAsynPortDriver:getEpicsState: EPICS state: Unknown state (29). Allow callbacks: true.
iocRun: All initialization complete
2020/12/07 15:30:32.549 ecmcAsynPortDriver:getEpicsState: EPICS state: initHookAfterIocRunning (16). Allow callbacks: true.
cEpicsEnvSetCalc("ECMC_TEMP_WHATCHDOG_1",1000/1000*1000)
ecmcEpicsEnvSetCalc("ECMC_TEMP_WHATCHDOG_2",1000*10)
ecmcConfigOrDie "Cfg.EcSlaveConfigWatchDog(4,1000,10000)"
ecmcConfigOrDie "Cfg.EcAddSdo(4,0x1C32,0x1,3,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(4,0x1C32,0x2,1000000,4)"
ecmcConfigOrDie "Cfg.EcAddSdo(4,0x1C33,0x1,3,2)"
ecmcConfigOrDie "Cfg.EcAddSdo(4,0x1C33,0x2,1000000,4)"
epicsEnvUnset(ECMC_TEMP_PERIOD_NANO_SECS)
epicsEnvUnset(ECMC_TEMP_PERIOD_NANO_SECS_HALF)
epicsEnvUnset(ECMC_TEMP_WHATCHDOG_1)
epicsEnvUnset(ECMC_TEMP_WHATCHDOG_2)
ecmcFileExist(ecmcEL7211.substitutions,1,1)
dbLoadTemplate(ecmcEL7211.substitutions,"P=IOC_TEST:,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=0,SLAVE_POS=4,HWTYPE=EL7211,T_SMP_MS=10,TSE=-2,NELM=1")
# increment SLAVE_ID
ecmcEpicsEnvSetCalc("SLAVE_ID", "4+1","%d")
#Apply hardware configuration
ecmcConfigOrDie "Cfg.EcApplyConfig(1)"
##############################################################################
############ Set outputs to feed switches
ecmcConfigOrDie "Cfg.WriteEcEntryIDString(3,BO_1,1)"
ecmcConfigOrDie "Cfg.WriteEcEntryIDString(3,BO_2,1)"
ecmcConfigOrDie "Cfg.WriteEcEntryIDString(3,BO_3,1)"
ecmcConfigOrDie "Cfg.WriteEcEntryIDString(3,BO_4,1)"
##############################################################################
## AXIS 1
#
epicsEnvSet("DEV",      "IOC_TEST")
#$(SCRIPTEXEC) ($(ecmccfg_DIR)configureAxis.cmd, CONFIG=./cfg/linear_1.ax)
##############################################################################
############# Configure diagnostics:
ecmcConfigOrDie "Cfg.EcSetDiagnostics(1)"
ecmcConfigOrDie "Cfg.EcEnablePrintouts(0)"
ecmcConfigOrDie "Cfg.EcSetDomainFailedCyclesLimit(100)"
#ecmcConfigOrDie "Cfg.SetDiagAxisIndex(1)"
#ecmcConfigOrDie "Cfg.SetDiagAxisFreq(2)"
ecmcConfigOrDie "Cfg.SetDiagAxisEnable(0)"
# go active
iocshLoad (/home/dev/epics/base-7.0.4/require/3.3.0/siteMods/ecmccfg/develop/setAppMode.cmd)
#==============================================================================
# setAppMode.cmd
ecmcFileExist("/home/dev/epics/base-7.0.4/require/3.3.0/siteMods/ecmccfg/develop/general.cmd",1)
iocshLoad /home/dev/epics/base-7.0.4/require/3.3.0/siteMods/ecmccfg/develop/general.cmd
#==============================================================================
# general.cmd
ecmcFileExist("ecmcGeneral.db",1,1)
dbLoadRecords("ecmcGeneral.db","P=IOC_TEST:,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,T_SMP_MS=10,TSE=-2,ECMC_PROC_HOOK=")
# Examples of commands for info:
# ecmcReport <level> or asynReport <level>
# ecmcReport 3
# ecmcGrepParam <pattern>
# List all ecmc params for ethercat slave 2:
# ecmcGrepParam *s2*
#
ecmcEpicsEnvSetCalcTernary(ECMC_MASTER_CMD, "0>=0", "","#- ")
 ecmcFileExist("ecmcEc.db",1,1)
 dbLoadRecords("ecmcEc.db","P=IOC_TEST:,PORT=MC_CPU1,ADDR=0,TIMEOUT=1,MASTER_ID=0,T_SMP_MS=10,TSE=-2")
ecmcConfigOrDie "Cfg.SetAppMode(1)"
iocInit
############################################################################
## EPICS R7.0.4-E3-7.0.4-patch
## Rev. 2020-12-07T14:09+0100
############################################################################
# Store Records to file
dbl > pvs.log
# Set the IOC Prompt String One 
epicsEnvSet IOCSH_PS1 "mcag-epics4-31618 > "
#
[?1034hmcag-epics4-31618 > 